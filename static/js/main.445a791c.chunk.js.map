{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","clicked","number","Board","useState","Array","fill","squares","setSquares","isXNext","setisXNext","renderSquare","i","sign","nextSquares","updateSquares","status","Game","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iOAMMA,G,MAAS,SAAAC,GACb,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAMG,SACvCH,EAAMI,UAKPC,EAAQ,WAAO,IAAD,EACYC,mBAASC,MAAM,GAAGC,KAAK,MADnC,mBACXC,EADW,KACFC,EADE,OAEYJ,oBAAS,GAFrB,mBAEXK,EAFW,KAEFC,EAFE,KAelB,SAASC,EAAaC,GACpB,OACE,kBAACf,EAAD,CACEK,OAAQK,EAAQK,GAChBX,QAAS,YAXf,SAAuBY,EAAMD,GAC3B,IAAME,EAAW,YAAOP,GACxBC,EAAWM,GACXA,EAAYF,GAAKH,EAAU,IAAM,IACjCC,GAAYD,GAQNM,CAAc,EAAKH,MAM3B,IAAMI,EAASP,EAAU,IAAM,IAE/B,OACE,6BACE,yBAAKV,UAAU,UAAf,iBAAuCiB,GACvC,yBAAKjB,UAAU,aACZY,EAAa,GACbA,EAAa,GACbA,EAAa,IAEhB,yBAAKZ,UAAU,aACZY,EAAa,GACbA,EAAa,GACbA,EAAa,IAEhB,yBAAKZ,UAAU,aACZY,EAAa,GACbA,EAAa,GACbA,EAAa,IAEhB,yBAAKZ,UAAU,QAAQC,QA1C3B,WACEQ,EAAWH,MAAM,GAAGC,KAAK,QAyCvB,cAOAW,E,uKAEF,OACE,yBAAKlB,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACI,EAAD,OAEF,yBAAKJ,UAAU,aACb,8BACA,mC,GATSmB,IAAMC,WAkBzBC,IAASC,OAAO,kBAACJ,EAAD,MAAUK,SAASC,eAAe,U","file":"static/js/main.445a791c.chunk.js","sourcesContent":["//tictactoe using react hooks\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nconst Square = props => {\n  return (\n    <button className=\"square\" onClick={props.clicked}>\n      {props.number}\n    </button>\n  );\n};\n\nconst Board = () => {\n  const [squares, setSquares] = useState(Array(9).fill(\" \"));\n  const [isXNext, setisXNext] = useState(true);\n\n  function resetGame() {\n    setSquares(Array(9).fill(\" \"));\n  }\n\n  function updateSquares(sign, i) {\n    const nextSquares = [...squares];\n    setSquares(nextSquares);\n    nextSquares[i] = isXNext ? \"o\" : \"x\";\n    setisXNext(!isXNext);\n  }\n\n  function renderSquare(i) {\n    return (\n      <Square\n        number={squares[i]}\n        clicked={() => {\n          updateSquares(\"x\", i);\n        }}\n      />\n    );\n  }\n\n  const status = isXNext ? \"o\" : \"x\";\n\n  return (\n    <div>\n      <div className=\"status\">Next Player : {status}</div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n      <div className=\"reset\" onClick={resetGame}>\n        New Game\n      </div>\n    </div>\n  );\n};\n\nclass Game extends React.Component {\n  render() {\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board />\n        </div>\n        <div className=\"game-info\">\n          <div>{/* status */}</div>\n          <ol>{/* TODO */}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n"],"sourceRoot":""}